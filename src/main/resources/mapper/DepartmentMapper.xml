<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.glsx.shield.modules.mapper.DepartmentMapper">
    <resultMap id="BaseResultMap" type="cn.com.glsx.shield.modules.entity.Department">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="department_name" jdbcType="VARCHAR" property="departmentName"/>
        <result column="tenant_id" jdbcType="INTEGER" property="tenantId"/>
        <result column="del_flag" jdbcType="TINYINT" property="delFlag"/>
        <result column="is_root" jdbcType="TINYINT" property="isRoot"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="order_num" jdbcType="INTEGER" property="orderNum"/>
        <result column="enable_status" jdbcType="TINYINT" property="enableStatus"/>
        <result column="created_date" jdbcType="TIMESTAMP" property="createdDate"/>
        <result column="created_by" jdbcType="INTEGER" property="createdBy"/>
        <result column="updated_date" jdbcType="TIMESTAMP" property="updatedDate"/>
        <result column="updated_by" jdbcType="INTEGER" property="updatedBy"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , department_name, tenant_id,is_root, del_flag, order_num, type,
        enable_status,created_date, created_by, updated_date, updated_by
    </sql>

    <select id="selectById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_department
        where del_flag = 0
        and id = #{id}
    </select>

    <update id="logicDeleteByIdList">
        update t_department set del_flag = -1 where
        id in
        <foreach collection="ids" open="(" close=")" separator="," item="id">
            #{id}
        </foreach>
    </update>

    <select id="search" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_department
        where del_flag = 0
        <if test="tenantId != null">
            and tenant_id = #{tenantId}
        </if>
        <if test="departmentName != null">
            and department_name like CONCAT('%',#{departmentName},'%')
        </if>
        <if test="enableStatus != null">
            and enable_status = #{enableStatus}
        </if>
        <if test="isRoot != null">
            and is_root = #{isRoot}
        </if>
        <if test="tenantIds != null and tenantIds.size() > 0">
            and tenant_id in
            <foreach collection="tenantIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="orgIds != null and orgIds.size() > 0">
            and id in
            <foreach collection="orgIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        order by order_num
    </select>

    <select id="selectByIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_department where del_flag = 0
        and id in
        <foreach collection="ids" separator="," open="(" close=")" item="id">
            #{id}
        </foreach>
    </select>

    <select id="selectAllNotDel" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_department where del_flag = 0
    </select>

    <select id="selectByTenantId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_department
        where del_flag = 0
        and tenant_id = #{tenantId}
    </select>

    <select id="selectByTenantIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_department
        where del_flag = 0
        and tenant_id in
        <foreach collection="tenantIds" separator="," open="(" close=")" item="tenantId">
            #{tenantId}
        </foreach>
    </select>

    <select id="selectRootDepartmentByTenantId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_department
        where del_flag = 0
        and is_root = 1
        and tenant_id = #{tenantId}
    </select>

    <select id="getTenantPathsByUserIds" resultType="cn.com.glsx.shield.modules.model.UserSuperiorOrgModel">
        SELECT
        group_concat(to1.superior_id order by depth desc) superiorIds,
        group_concat(td.department_name order by depth desc SEPARATOR '/') superiorNames,
        tu.department_id orgId,
        td.department_name orgName,
        tu.id userId,
        tu.username,
        tu.account
        FROM t_organization to1
        inner join t_user tu on tu.department_id = to1.sub_id
        left join t_department td on td.id = to1.superior_id
        WHERE to1.del_flag = 0
        AND tu.id in
        <foreach collection="userIds" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        GROUP BY to1.sub_id, tu.id
    </select>

    <select id="selectSpecialLevelPaths" resultMap="BaseResultMap">
        select distinct td.*
        from t_department td
        left join t_organization to2 on to2.sub_id = td.id
        where td.del_flag = 0
        and to2.del_flag = 0
        and td.id in
        <foreach collection="subIds" separator="," open="(" close=")" item="subId">
            #{subId}
        </foreach>
        and td.is_root = 0
        and to2.depth in
        <foreach collection="depths" separator="," open="(" close=")" item="depth">
            #{depth}
        </foreach>
    </select>

    <select id="selectByOrg" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_department
        where del_flag = 0
        <if test="tenantId != null">
            and tenant_id = #{tenantId}
        </if>
        <if test="orgId != null">
            and id = #{orgId}
        </if>
        <if test="orgName != null">
            and department_name = #{orgName}
        </if>
        <if test="tenantIds != null and tenantIds.size() > 0">
            and tenant_id in
            <foreach collection="tenantIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="orgIds != null and orgIds.size() > 0">
            and id in
            <foreach collection="orgIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="selectUserOrgs" resultType="cn.com.glsx.shield.modules.model.UserOrgModel">
        select td.id orgId, td.department_name orgName, tu.id userId
        from t_user tu
        left join t_department td on tu.department_id = td.id
        where tu.del_flag = 0
        and tu.id in
        <foreach collection="userIds" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>
</mapper>